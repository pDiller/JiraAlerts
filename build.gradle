apply plugin: 'war'

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        testCompile 'junit:junit:4.12'
        testCompile 'org.mockito:mockito-all:1.9.5'
        testCompile 'org.assertj:assertj-core:3.8.0'

        runtime 'org.slf4j:slf4j-log4j12:1.8.0-alpha2'
        runtime 'org.slf4j:slf4j-api:1.7.25'

        compile 'com.google.guava:guava:20.0'

        compile 'javax.servlet:javax.servlet-api:3.1.0'

        compile 'org.apache.wicket:wicket:8.0.0-M6'
        compile 'org.apache.wicket:wicket-spring:8.0.0-M6'

        compile 'org.springframework:spring-core:4.3.9.RELEASE'
        compile 'org.springframework:spring-context:4.3.9.RELEASE'
        compile 'org.springframework:spring-web:4.3.9.RELEASE'
        compile 'org.springframework.data:spring-data-jpa:1.11.4.RELEASE'


        compile 'org.hibernate:hibernate-entitymanager:5.2.10.Final'
        compile 'org.hibernate:hibernate-c3p0:5.2.10.Final'

        compile 'mysql:mysql-connector-java:6.0.6'
    }
	
	idea{
	module.iml.withXml {
        def node = it.asNode()
        def content = node.component.find { it.'@name' == 'NewModuleRootManager' }.content[0]
        content.sourceFolder.each { sourceFolder ->
            if(sourceFolder.@url?.endsWith('/resources')) {
                sourceFolder.attributes().with {
                    put('type', 'java-resource')
                }
            }
			if(sourceFolder.@url?.endsWith('/test/java')) {
                sourceFolder.attributes().with {
                    put('isTestSource', 'true')
                }
            }
        }
    }
	}
	
}

dependencies {
    compile project(':integration')
}